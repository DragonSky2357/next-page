server:
  port: 8080

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/nextpage?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update  # 개발 중에는 update / 운영 시에는 validate or none 추천
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  redis:
    host: localhost
    port: 6379

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  # 예: validation 메시지 한글 처리
  messages:
    basename: messages
    encoding: UTF-8

mybatis:
  mapper-locations: classpath:/mappers/**/*.xml
  type-aliases-package: com.dragonsky.*  # 엔티티 패키지 경로
  configuration:
    map-underscore-to-camel-case: true

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    com.yourpackage: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: "*"  # actuator 모든 엔드포인트 노출 (운영환경에서는 제한 필요)

---

# spring security 기본 설정 예시
spring:
  security:
    user:
      name: admin
      password: admin123

jwt:
  secret: "q8s7v6p4n2k1m9r3x0z5a7b8c6d4e1f2"  # 예시, 랜덤하고 복잡한 문자열
  access-token-validity: 9000000000
  refresh-token-validity: 60480000000

naver:
  client:
    id: ${NAVER_CLIENT_ID}
    secret: ${NAVER_CLIENT_SECRET}

cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET}
    region:
      static: ap-northeast-2
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}
      secret-key: ${AWS_SECRET_ACCESS_KEY}